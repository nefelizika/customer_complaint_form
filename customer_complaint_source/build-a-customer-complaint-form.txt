** start of index.html **

<!DOCTYPE html>
<html lang="en">

<head>
    <title>Customer Complaint Form</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
</head>

<body>
    <h1>Complaint Form</h1>
    <form id="form">
        <fieldset id="personal-info">
            <div>
                <label for="full-name">Full Name:</label>
                <input type="text" id="full-name" name="full-name" placeholder="John Doe">
            </div>

            <div>
                <label for="email">Email Address:</label>
                <input type="email" id="email" name="email" placeholder="example@domain.com">
            </div>
        </fieldset>
        <hr>
        <fieldset id="product-info">
            <div>
                <label for="order-no">Order No:</label>
                <input type="text" id="order-no" name="order-no" placeholder="2024######">
            </div>
            <div>
                <label for="product-code">Product Code:</label>
                <input type="text" id="product-code" name="product-code" placeholder="XX##-X###-XX#">
            </div>
            <div>
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" name="quantity" min="1">
            </div>
        </fieldset>

        <fieldset id="complaints-group">
            <legend>Complaint Reason:</legend>
            <div>
                <input type="checkbox" id="damaged-product" name="complaint" value="damaged-product">
                <label for="damaged-product">Damaged Product</label>
            </div>

            <div>
                <input type="checkbox" id="nonconforming-product" name="complaint" value="nonconforming-product">
                <label for="nonconforming-product">Nonconforming Product</label>
            </div>

            <div>
                <input type="checkbox" id="delayed-dispatch" name="complaint" value="delayed-dispatch">
                <label for="delayed-dispatch">Delayed Dispatch</label>
            </div>

            <div>
                <input type="checkbox" id="other-complaint" name="complaint" value="other">
                <label for="other-complaint">Other</label>
            </div>
        </fieldset>

        <div id="complaint-description-container">
            <legend>Description of Complaint Reason</legend>
            <textarea placeholder="Describe the reason of your complaint in at least 20 characters"
                name="complaint-textarea" id="complaint-description"></textarea>
        </div>

        <fieldset id="solutions-group">
            <legend>Desired Solution</legend>
            <input type="radio" name="solutions" id="refund" value="refund">
            <label for="refund">Refund</label>

            <input type="radio" name="solutions" id="exchange" value="exchange">
            <label for="exchange">Exchange</label>

            <input type="radio" name="solutions" id="other-solution" value="other">
            <label for="other-solution">Other</label>
        </fieldset>

        <div id="solution-description-container">
            <legend>Description of Desired Solution</legend>
            <textarea placeholder="Describe the desired solution to your issue in at least 20 characters"
                name="solution-textarea" id="solution-description"></textarea>
        </div>
        <div id="btn-container">
            <button type="submit" id="submit-btn">Submit</button>
            <span id="message-box" aria-live="polite"></span>
        </div>

    </form>

    <script src="script.js"></script>
</body>

</html>

** end of index.html **

** start of styles.css **

* {
    box-sizing: border-box;
}

h1 {
    text-align: center;
}

#form {
    max-width: 70%;
    margin: auto;
    border-radius: 10px;
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    padding: 10px;
}

input {
    border-color: rgb(118, 118, 118);
}

#personal-info input, #product-info input {
    width: 100%;
    margin-bottom: 10px;
}


fieldset {
    margin-bottom: 10px;
    border-radius: 5px;
    border-color: rgb(118, 118, 118);
}

textarea {
    width: 100%;
    border-color: rgb(118, 118, 118);
}

#btn-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#submit-btn, #clear-btn {
    margin: 10px 15px 0;
}

** end of styles.css **

** start of script.js **

function validateForm() {
  const fullName = document.getElementById("full-name");
  const email = document.getElementById("email");
  const orderNo = document.getElementById("order-no");
  const productCode = document.getElementById("product-code");
  const quantity = document.getElementById("quantity");
  const complaintCheckboxes = document.querySelectorAll("#complaints-group input[type='checkbox']");
  const complaintDesc = document.getElementById("complaint-description");
  const solutionRadios = document.querySelectorAll("#solutions-group input[type='radio']");
  const solutionDesc = document.getElementById("solution-description");

  const fullNameValid = fullName.value.trim() !== "";
  const emailValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email.value);
  const orderNoValid = /^2024\d{6}$/.test(orderNo.value);
  const productCodeValid = /^[A-Za-z]{2}\d{2}-[A-Za-z]\d{3}-[A-Za-z]{2}\d$/.test(productCode.value);
  const quantityValid = Number.isInteger(Number(quantity.value)) && Number(quantity.value) > 0;

  const complaintsChecked = Array.from(complaintCheckboxes).some(cb => cb.checked);
  const otherComplaintChecked = document.getElementById("other-complaint").checked;
  const complaintDescValid = !otherComplaintChecked || complaintDesc.value.trim().length >= 20;

  const solutionsChecked = Array.from(solutionRadios).some(rb => rb.checked);
  const otherSolutionChecked = document.getElementById("other-solution").checked;
  const solutionDescValid = !otherSolutionChecked || solutionDesc.value.trim().length >= 20;

  return {
    "full-name": fullNameValid,
    "email": emailValid,
    "order-no": orderNoValid,
    "product-code": productCodeValid,
    "quantity": quantityValid,
    "complaints-group": complaintsChecked,
    "complaint-description": complaintDescValid,
    "solutions-group": solutionsChecked,
    "solution-description": solutionDescValid
  };
}


function isValid(result) {
  return Object.values(result).every(val => val === true);
}


function setFieldBorder(id, valid) {
  const el = document.getElementById(id);
  if (el) el.style.borderColor = valid ? "green" : "red";
}

function setFieldsetBorder(id, valid) {
  const fs = document.getElementById(id);
  if (fs) fs.style.borderColor = valid ? "green" : "red";
}

function applyValidation(result) {
  setFieldBorder("full-name", result["full-name"]);
  setFieldBorder("email", result.email);
  setFieldBorder("order-no", result["order-no"]);
  setFieldBorder("product-code", result["product-code"]);
  setFieldBorder("quantity", result.quantity);
  setFieldsetBorder("complaints-group", result["complaints-group"]);
  setFieldBorder("complaint-description", result["complaint-description"]);
  setFieldsetBorder("solutions-group", result["solutions-group"]);
  setFieldBorder("solution-description", result["solution-description"]);
}

document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById("form");

  // Watch all inputs
  [ "full-name", "email", "order-no",
    "product-code", "quantity",
    "complaint-description", "solution-description"
  ].forEach(id => {
    const el = document.getElementById(id);
    el.addEventListener("change", () => {
      const result = validateForm();
      applyValidation(result);
    });
  });

  // Checkboxes
  document.querySelectorAll("#complaints-group input[type='checkbox']").forEach(cb => {
    cb.addEventListener("change", () => {
      const result = validateForm();
      setFieldsetBorder("complaints-group", result["complaints-group"]);
    });
  });

  // Radios
  document.querySelectorAll("#solutions-group input[type='radio']").forEach(rb => {
    rb.addEventListener("change", () => {
      const result = validateForm();
      setFieldsetBorder("solutions-group", result["solutions-group"]);
    });
  });

  // On submit
  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const result = validateForm();
    applyValidation(result);
    if (isValid(result)) {
      alert("Form submitted successfully!");
    } else {
      alert("Please fix the errors before submitting.");
    }
  });
});


** end of script.js **

